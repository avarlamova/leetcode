/*Недавно Егор нашёл у себя дома две доминошки. Теперь он захотел их 
соединить. Напомним, что доминошка представляет собой прямоугольную фигуру, 
состоящую из двух квадратных половинок, причем каждая половинка содержит от нуля до шести точек. По правилам домино, доминошки можно соединить, если у них есть половинки с одинаковым количеством точек. Например, ﻿1\mid21∣2﻿ и ﻿1\mid31∣3﻿ можно соединить, 
а ﻿4\mid54∣5﻿ и ﻿3\mid33∣3﻿ — нельзя. 


Формат входных данных


В первой строке входных данных записаны два целых 
числа a и b ﻿(0 \le a,b\le6)(0≤a,b≤6)﻿ — количество точек на левой и правой половинках первой доминошки соответственно. Во строке строке входных данных записаны два целых числа ﻿xx﻿ и ﻿yy﻿ ﻿(0≤x,y≤6)(0≤x,y≤6)﻿ — количество точек на левой и правой половинках второй доминошки соответственно. Гарантируется, что доминошки различны.


Формат выходных данных


Выведите число -1, если доминошки нельзя соединить. Иначе выведите через пробел четыре целых числа — количество точек на половинках доминошек, если соединить их одинаковыми половинками. Если решений несколько — выведите любое из них. */

function dominoes (a,b) {
    let first = a.split(' ');
    let second = b.split(' ');
    let res = '';
    //indices of matching numbers
    let firstIndex;
    let secondIndex;
    for (let i = 0; i<first.length; i++) {
        if (second.includes(first[i])) {
           firstIndex = i;
           secondIndex = second.indexOf(first[i]);
           //deleting matching numbers from original arrays
           arr1 = first.splice(i-1,1);
           arr2 = second.splice(secondIndex-1,1);
           res = arr1[0]+ ' ' + first[i] + ' ' + second[secondIndex]+' ' + arr2[0];
        }
        else res = -1
    }
    console.log (res)
}

dominoes('4 5', '3 3')